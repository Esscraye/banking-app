#!/bin/bash

# Script pour v√©rifier la configuration GitHub Actions
# Utilise l'API GitHub pour v√©rifier les secrets (sans r√©v√©ler leurs valeurs)

set -e

# Couleurs
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${BLUE}üîç V√©rification de la configuration GitHub Actions${NC}"
echo -e "${YELLOW}=================================================${NC}"

# V√©rifier si on est dans un repo git
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo -e "${RED}‚ùå Ce n'est pas un repository Git${NC}"
    exit 1
fi

# Obtenir l'URL du repository
REPO_URL=$(git config --get remote.origin.url)
echo -e "${BLUE}üìÇ Repository: $REPO_URL${NC}"

# Extraire owner/repo depuis l'URL
if [[ $REPO_URL == *"github.com"* ]]; then
    # Extraire owner/repo
    REPO_PATH=$(echo $REPO_URL | sed 's/.*github\.com[/:]\([^/]*\/[^/]*\)\.git.*/\1/' | sed 's/\.git$//')
    echo -e "${BLUE}üìç Repository GitHub: $REPO_PATH${NC}"
else
    echo -e "${RED}‚ùå Ce n'est pas un repository GitHub${NC}"
    exit 1
fi

echo ""
echo -e "${GREEN}‚úÖ Checklist de configuration GitHub Actions:${NC}"
echo ""

echo -e "${YELLOW}üìã Secrets √† configurer dans GitHub:${NC}"
echo "   Settings ‚Üí Secrets and variables ‚Üí Actions"
echo ""
echo -e "   1. ${BLUE}DOCKER_USERNAME${NC}"
echo "      ‚îî‚îÄ‚îÄ Votre nom d'utilisateur Docker Hub"
echo ""
echo -e "   2. ${BLUE}DOCKER_PASSWORD${NC}"
echo "      ‚îî‚îÄ‚îÄ Token d'acc√®s Docker Hub (pas le mot de passe!)"
echo "      ‚îî‚îÄ‚îÄ Format: dckr_pat_xxxxxxxxxxxxxxxxxxxxx"
echo ""

echo -e "${YELLOW}üåç Environnement √† cr√©er dans GitHub:${NC}"
echo "   Settings ‚Üí Environments ‚Üí New environment"
echo ""
echo -e "   - Nom: ${BLUE}production${NC}"
echo ""

echo -e "${YELLOW}üîë Comment cr√©er un token Docker Hub:${NC}"
echo "   1. Aller sur hub.docker.com"
echo "   2. Account Settings ‚Üí Security"
echo "   3. New Access Token"
echo "   4. Nom: 'GitHub Actions'"
echo "   5. Permissions: Read, Write, Delete"
echo "   6. Copier le token g√©n√©r√©"
echo ""

echo -e "${YELLOW}üìÅ Fichiers de workflow:${NC}"
if [ -f ".github/workflows/ci-cd.yml" ]; then
    echo -e "   ‚úÖ ${GREEN}.github/workflows/ci-cd.yml${NC} existe"
else
    echo -e "   ‚ùå ${RED}.github/workflows/ci-cd.yml${NC} n'existe pas"
fi
echo ""

echo -e "${YELLOW}üê≥ Configuration Docker:${NC}"
if [ -f "docker-compose.yml" ]; then
    echo -e "   ‚úÖ ${GREEN}docker-compose.yml${NC} existe"
else
    echo -e "   ‚ùå ${RED}docker-compose.yml${NC} n'existe pas"
fi

if [ -d "docker" ]; then
    echo -e "   ‚úÖ ${GREEN}docker/${NC} dossier existe"
    echo -e "      ‚îî‚îÄ‚îÄ Dockerfiles: $(ls docker/*.Dockerfile 2>/dev/null | wc -l) fichiers"
else
    echo -e "   ‚ùå ${RED}docker/${NC} dossier n'existe pas"
fi
echo ""

echo -e "${GREEN}üöÄ Prochaines √©tapes:${NC}"
echo "   1. Configurer les secrets GitHub (ci-dessus)"
echo "   2. Cr√©er l'environnement 'production'"
echo "   3. Faire un commit et push pour d√©clencher le pipeline"
echo "   4. V√©rifier les logs dans l'onglet 'Actions' de GitHub"
echo ""

echo -e "${BLUE}üìö Liens utiles:${NC}"
echo "   ‚Ä¢ GitHub Secrets: https://github.com/$REPO_PATH/settings/secrets/actions"
echo "   ‚Ä¢ GitHub Environments: https://github.com/$REPO_PATH/settings/environments"
echo "   ‚Ä¢ GitHub Actions: https://github.com/$REPO_PATH/actions"
echo "   ‚Ä¢ Docker Hub Tokens: https://hub.docker.com/settings/security"
echo ""

echo -e "${GREEN}‚ú® Configuration termin√©e !${NC}"
